
- import_tasks: requirement_debian.yml
  when: ansible_os_family|lower == 'debian'

- import_tasks: requirement_redhat.yml
  when: ansible_os_family|lower == 'redHat'

- name: Setup group
  group: name={{ssr_group}} system=yes

- name: Setup user
  user: name={{ssr_user}} system=yes group={{ssr_group}}

- name: clone shadowsocksr
  git:
    repo: '{{shadowsocksr_repo}}'
    dest: '{{ssr_work_dir}}'
    version: '{{ssr_branch}}'
    force: yes

- name: chown shadowsocksr
  file:
    path: '{{ssr_work_dir}}'
    owner: '{{ssr_user}}'
    group: '{{ssr_group}}'
    mode: 0755
    state: directory
    recurse: yes

- name: copy ssr config
  copy: dest={{ssr_conf_dir}} owner=root group=root mode=644 src=shadowsocks.json

- name: init configure ssr
  shell: '{{ssr_work_dir}}/initcfg.sh'
  args:
    chdir: '{{ssr_work_dir}}'

- name: Detect if this is a systemd based system
  command: cat /proc/1/comm
  register: init
- set_fact: use_systemd=True
  when: init.stdout == 'systemd'
- set_fact: use_systemd=False
  when: init.stdout != 'systemd'

- name: Setup shadowsocksr upstart script
  copy: dest={{ssr_upstart}} owner=root group=root mode=644 src=shadowsocksr.conf
  when: not use_systemd

- name: Setup shadowsocksr systemd script
  copy: dest={{ssr_systemd}} owner=root group=root mode=644 src=shadowsocksr.service
  when: use_systemd

- name: Enable and Start shadowsocksr
  service: name=shadowsocksr state=started enabled=yes
